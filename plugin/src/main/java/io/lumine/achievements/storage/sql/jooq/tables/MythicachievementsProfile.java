/*
 * This file is generated by jOOQ.
 */
package io.lumine.achievements.storage.sql.jooq.tables;


import io.lumine.achievements.storage.sql.jooq.DefaultSchema;
import io.lumine.achievements.storage.sql.jooq.Keys;
import io.lumine.achievements.storage.sql.jooq.tables.records.ProfileRecord;

import io.lumine.mythic.bukkit.utils.lib.jooq.Field;
import io.lumine.mythic.bukkit.utils.lib.jooq.ForeignKey;
import io.lumine.mythic.bukkit.utils.lib.jooq.Name;
import io.lumine.mythic.bukkit.utils.lib.jooq.Record;
import io.lumine.mythic.bukkit.utils.lib.jooq.Row2;
import io.lumine.mythic.bukkit.utils.lib.jooq.Schema;
import io.lumine.mythic.bukkit.utils.lib.jooq.Table;
import io.lumine.mythic.bukkit.utils.lib.jooq.TableField;
import io.lumine.mythic.bukkit.utils.lib.jooq.TableOptions;
import io.lumine.mythic.bukkit.utils.lib.jooq.UniqueKey;
import io.lumine.mythic.bukkit.utils.lib.jooq.impl.DSL;
import io.lumine.mythic.bukkit.utils.lib.jooq.impl.SQLDataType;
import io.lumine.mythic.bukkit.utils.lib.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MythicachievementsProfile extends TableImpl<ProfileRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>mythicachievements_profile</code>
     */
    public static final MythicachievementsProfile MYTHICACHIEVEMENTS_PROFILE = new MythicachievementsProfile();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProfileRecord> getRecordType() {
        return ProfileRecord.class;
    }

    /**
     * The column <code>mythicachievements_profile.uuid</code>.
     */
    public final TableField<ProfileRecord, String> UUID = createField(DSL.name("uuid"), SQLDataType.CHAR(36).nullable(false), this, "");

    /**
     * The column <code>mythicachievements_profile.name</code>.
     */
    public final TableField<ProfileRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(64).nullable(false), this, "");

    private MythicachievementsProfile(Name alias, Table<ProfileRecord> aliased) {
        this(alias, aliased, null);
    }

    private MythicachievementsProfile(Name alias, Table<ProfileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>mythicachievements_profile</code> table reference
     */
    public MythicachievementsProfile(String alias) {
        this(DSL.name(alias), MYTHICACHIEVEMENTS_PROFILE);
    }

    /**
     * Create an aliased <code>mythicachievements_profile</code> table reference
     */
    public MythicachievementsProfile(Name alias) {
        this(alias, MYTHICACHIEVEMENTS_PROFILE);
    }

    /**
     * Create a <code>mythicachievements_profile</code> table reference
     */
    public MythicachievementsProfile() {
        this(DSL.name("mythicachievements_profile"), null);
    }

    public <O extends Record> MythicachievementsProfile(Table<O> child, ForeignKey<O, ProfileRecord> key) {
        super(child, key, MYTHICACHIEVEMENTS_PROFILE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public UniqueKey<ProfileRecord> getPrimaryKey() {
        return Keys.KEY_MYTHICACHIEVEMENTS_PROFILE_PRIMARY;
    }

    @Override
    public MythicachievementsProfile as(String alias) {
        return new MythicachievementsProfile(DSL.name(alias), this);
    }

    @Override
    public MythicachievementsProfile as(Name alias) {
        return new MythicachievementsProfile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MythicachievementsProfile rename(String name) {
        return new MythicachievementsProfile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MythicachievementsProfile rename(Name name) {
        return new MythicachievementsProfile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }
}
